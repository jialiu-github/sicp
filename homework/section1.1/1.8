(define (cube x) (* x x x))

(define (square x) (* x x))

(define (improve guess x)
        (/ (+ (/ x (square guess)) (* 2 guess))
           3)
)

(define (good-enough? old-guess new-guess)
        (< (abs (- new-guess old-guess)) 0.001))

(define (cube-root-iter old-guess new-guess x)
        (if (good-enough? new-guess old-guess)
        new-guess
        (cube-root-iter new-guess (improve new-guess x) x)))

(define (cube-root x)
        (cube-root-iter 0 1.0 x))

(cube-root (* 3 3 3))